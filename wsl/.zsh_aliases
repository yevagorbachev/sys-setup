export WINDOWS="/mnt/c"
export WINUSER="\"$WINDOWS/Users/Yevgeniy Gorbachev\"" 
export DOCS="\"$WINUSER/OneDrive - rit.edu/Documents\""
export PROJECTS=~/.projects
export PSETUP=.setup.sh
export EDITOR=/usr/bin/nvim
export PATH=$PATH:~/.local/share/nvim/mason/bin

# cd $DOCS needs to be eval for some reason

alias python="python3"
alias pip="pip3"
alias update=". ~/.zshrc"
alias nv="nvim"
alias cyntax="gcc -fsyntax-only"

alias mkae="sl" # funny
alias maek="sl" # also funny
alias dor="sl" # also (2) funny
alias nivm="sl" # also (3) funny (2)

function _confirm {
	read -q "reply?$1 [y/n]: "; echo
	if [[ $reply != "y" ]]; then
		return 1
	else
		return 0
	fi
}

function clean-sub { # make clean for immediate subdirectories
	for dir in */; do
		make -C $dir clean
	done
}

function plotcrop { # crop in-place with no margin
	pdfcrop -margin 0 $1 $1
}

function plotcrop-all { # plotcrop all .pdf in cwd
	for file in *.pdf; do
		plotcrop $file
	done
}

function project-make {
	declare src
	declare dst
	declare name
	declare remove_setup
	dst=.

	while getopts s:d:n:t flag
	do
		case "${flag}" in
			s) src=${OPTARG};;
			d) dst=${OPTARG};;
			n) name=${OPTARG};;
			t) remove_setup=false;;
		esac
	done
	if [[ -z $src ]]; then
		echo "Source option -s required"
		return 1
	fi
	if [[ -z $name ]]; then
		echo "Name option -n required"
		return 2
	fi
	if ! [[ -e $dst ]]; then
		mkdir -p $dst
	fi

	echo "Copying files..."
	cp $src/* $dst -r -v
	if [[ -e $src/$PSETUP ]]; then
		echo "Setup dotfle found"
		cp $src/$PSETUP $dst -v
	fi
	cd $dst
		
	if [[ -e $PSETUP ]]; then
		chmod +x $PSETUP
		./$PSETUP $name
		if [[ remove_setup ]]; then
			rm $PSETUP
		fi
	else
		echo "No setup dotfile to run"
	fi
}

function project-set {
	link=$PROJECTS/$1
	if [[ -L $link ]]; then
		project-list | grep "^$1\\s"
		if $(_confirm "Overwrite?"); then
			project-rm $1
		else
			return 1
		fi
	fi
	ln -s -f "$(pwd)" $link
}

# send config files to Windows
function nv-to-win {
	cp -L ~/.vimrc $PROJECTS/win-home/ -L
	cp -rL $PROJECTS/nvim/* $PROJECTS/nvim-win/
}

function project {
	cd -P $PROJECTS/$1
}

function project-list {
	ls -l $PROJECTS | sed -E 's/^.*[0-9]{2}:[0-9]{2} //g'
}

function project-rm {
	rm $PROJECTS/$1
}

function flatten-pdf {
	tf=$(mktemp)
	target=${2:-$1}
	echo "Writing output to $tf..."
	gs -sDEVICE=pdfwrite -dPDFSETTINGS=/default -dPreserveAnnots=false \
		-dNOPAUSE -dQUIET -dBATCH -sOutputFile=$tf $1
	echo "Done"
	mv $tf $target
	echo "Moved output to $target"
}

function fix-serial {
	sudo chown root:dialout /dev/ttyACM0
	sudo chmod 660 /dev/ttyACM0
}
